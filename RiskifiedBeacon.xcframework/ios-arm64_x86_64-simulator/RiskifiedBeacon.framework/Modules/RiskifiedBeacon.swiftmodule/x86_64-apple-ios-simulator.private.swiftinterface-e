// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name RiskifiedBeacon
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import CoreGraphics
import Foundation
@_exported import RiskifiedBeacon
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc open class OtpLogger : ObjectiveC.NSObject {
  @objc public init(isDebug: Swift.Bool = false)
  @objc public func info(message: Swift.String)
  @objc deinit
}
public struct OtpEvent : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
@_inheritsConvenienceInitializers @objc open class OtpSdk : ObjectiveC.NSObject {
  @objc public func offerOtp(config: RiskifiedBeacon.OtpConfig)
  @objc override dynamic public init()
  @objc deinit
}
@objc public class OtpConfig : ObjectiveC.NSObject {
  @objc public init(widgetToken: Swift.String, verificationHandler: @escaping (Swift.String) -> Swift.Void, widgetClosedHandler: @escaping () -> Swift.Void, onTimeoutHandler: @escaping () -> Swift.Void, parent: UIKit.UIViewController, env: RiskifiedBeacon.OtpEnv, isDebug: Swift.Bool)
  @objc deinit
}
@objc public enum OtpEnv : Swift.Int {
  case production
  case sandbox
  case staging
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension RiskifiedBeacon.OtpEnv : Swift.Equatable {}
extension RiskifiedBeacon.OtpEnv : Swift.Hashable {}
extension RiskifiedBeacon.OtpEnv : Swift.RawRepresentable {}
